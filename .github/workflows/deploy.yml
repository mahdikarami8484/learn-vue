name: Deploy Multiple Projects

on:
  push:
    branches:
      - master
 
  workflow_dispatch:
    
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write    

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      # Project 1
      - name: Install & Build Project 1
        run: |
          cd project-1
          npm install
          npm run build
          cd ..
      
      # Project 2
      - name: Install & Build Project 2
        run: |
          cd project-2
          npm install
          npm run build
          cd ..

      # Project 3
      - name: Install & Build Project 3
        run: |
          cd project-3/front-end
          npm install
          npm run build
          cd ../..

      - name: Collect builds
        run: |
          mkdir gh-pages
          cp -r project-1/ gh-pages/project1
          cp -r project-2/dist gh-pages/project2
          cp -r project-3/front-end/dist gh-pages/project3

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./gh-pages
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

